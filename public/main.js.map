{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/info-pop/info-pop.component.ts","./src/app/info-pop/info-pop.component.html","./src/app/nav-bar/nav-bar.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/project/project.component.ts","./src/app/project/project.component.html","./src/app/shared/services/contact.service.ts","./src/app/shared/services/global.service.ts","./src/app/shared/services/project.service.ts","./src/app/shared/services/technology.service.ts","./src/app/skill/skill.component.ts","./src/app/skill/skill.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { SkillComponent } from './skill/skill.component';\nimport { ProjectComponent } from './project/project.component';\nimport { ContactComponent } from './contact/contact.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'skills', component: SkillComponent, pathMatch: 'prefix' },\n  { path: 'projects', component: ProjectComponent, pathMatch: 'prefix' },\n  { path: 'contact', component: ContactComponent, pathMatch: 'prefix' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { trigger, transition, style, animate } from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { IRoute } from './shared/interface/iroute.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'folio';\n  routes: IRoute[] = [\n    {\n      path: '/home',\n      isActive: true,\n    },\n    {\n      path: '/skills',\n      isActive: true,\n    },\n    {\n      path: '/projects',\n      isActive: true,\n    },\n    {\n      path: '/contact',\n      isActive: true,\n    },\n  ];\n\n  getAnimationState(outlet: any) {\n    // Renvoie l'état d'animation en fonction de l'instance du router-outlet\n    return outlet.isActivated ? outlet.activatedRoute : '';\n  }\n}\n","<div></div>\n<div class=\"d-flex container-fluid\">\n  <router-outlet></router-outlet>\n  <app-nav-bar class=\"ps_rel mx-2\" [routes]=\"routes\"></app-nav-bar>\n</div>\n<div></div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ProjectComponent } from './project/project.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { SkillComponent } from './skill/skill.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { InfoPopComponent } from './info-pop/info-pop.component';\nimport { GlobalService } from './shared/services/global.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    FooterComponent,\n    SkillComponent,\n    HomeComponent,\n    ProjectComponent,\n    ContactComponent,\n    InfoPopComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [GlobalService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  trigger,\n  transition,\n  query,\n  style,\n  stagger,\n  animate,\n} from '@angular/animations';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as confetti from 'canvas-confetti';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { ErrorMessage } from '../shared/interface/ierrorMessage.interface';\nimport { ContactService } from '../shared/services/contact.service';\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n  animations: [\n    trigger('queryAnimation', [\n      transition(':enter', [\n        query(\n          '.typping',\n          [\n            style({\n              opacity: 0,\n              transform: 'translateX(80px)',\n            }),\n\n            stagger(100, [animate(500)]),\n          ],\n          { optional: true }\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class ContactComponent {\n  exp: string = '';\n  @ViewChild('confettiCanvas', { static: true })\n  confettiCanvasRef!: ElementRef<HTMLCanvasElement>;\n  private myConfetti!: confetti.CreateTypes;\n  private count: BehaviorSubject<number> = new BehaviorSubject<number>(8);\n  private subscription: Subscription = new Subscription();\n  private timeout: undefined | any = undefined;\n  formContact!: FormGroup;\n  msgEmail: string = '';\n  msgName: string = '';\n  msgMessage: string = '';\n  isSendMessage: Observable<boolean> = this.contactService.isSending$;\n  unsubscribe: Subscription = new Subscription();\n  validationMessageErrors: ErrorMessage = {\n    required: 'Ce champ est requis',\n    email: 'Entrer un email valide',\n    maxlength: 'Le champ est trop long',\n  };\n\n  constructor(\n    private _fb: FormBuilder,\n    private contactService: ContactService\n  ) {}\n\n  ngOnInit() {\n    this.formContact = this._fb.group({\n      message: ['', [Validators.required, Validators.maxLength(200)]],\n      email: ['', [Validators.email, Validators.required]],\n      name: ['', [Validators.required, Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit() {\n    if (this.formContact.valid) {\n      this.unsubscribe.add(\n        this.contactService.sendMessage(this.formContact.value).subscribe({\n          next: () => {\n            this.contactService.isSending$.next(false);\n          },\n        })\n      );\n    } else {\n      this.formContact.markAllAsTouched();\n    }\n  }\n  ngAfterViewInit() {\n    this.myConfetti = confetti.create(this.confettiCanvasRef.nativeElement, {\n      resize: true,\n      useWorker: true,\n    });\n    this.triggerConfetti();\n  }\n\n  //créer un pipe\n  hasError(controlName: string, validationError: string): boolean {\n    const control = this.formContact.get(controlName);\n    const errors = control?.errors;\n\n    if (errors && validationError in errors) {\n      return (\n        control.hasError(validationError) && (control.touched || control.dirty)\n      );\n    }\n\n    return false;\n  }\n  ngOnDestroy() {\n    this.unsubscribe.unsubscribe();\n    clearInterval(this.timeout);\n  }\n  triggerConfetti() {\n    this.timeout = setInterval(() => {\n      const observable = this.count.next(this.count.value - 1);\n      const duration = 10 * 1000;\n      const animationEnd = Date.now() + duration;\n      const defaults = {\n        startVelocity: 30,\n        spread: 800,\n        ticks: 60,\n        zIndex: 0,\n      };\n      const timeLeft = animationEnd - Date.now();\n      const particleCount = 400 * (timeLeft / duration);\n\n      if (this.count.value <= 0) {\n        clearInterval(this.timeout);\n        this.subscription.add(observable);\n      }\n      this.myConfetti({\n        ...defaults,\n        particleCount,\n        origin: { x: this.randomInRange(0.3, 0.6), y: Math.random() - 0.1 },\n      });\n    }, 1000);\n  }\n\n  randomInRange(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n  }\n\n  //partie form\n}\n","<section class=\"home_hero justify-content-center\" [@queryAnimation]=\"exp\">\n  <div class=\"container justify-content-center d-flex flex-wrap\">\n    <div class=\"profil_info d-flex flex-column justify-content-center\">\n      <div *ngIf=\"isSendMessage | async\">\n        <div>\n          <h1 class=\"title_text typping\">\n            <span class=\"first_letter\">C</span>ontact\n          </h1>\n        </div>\n      </div>\n\n      <span *ngIf=\"isSendMessage | async\" class=\"title_red typping\">\n        Open to work\n      </span>\n      <div\n        *ngIf=\"isSendMessage | async\"\n        class=\"description typing-container mb-2\"\n      >\n        <p class=\"typping\">\n          I hope you liked my portfolio v1, built with Angular and Express.\n          Please feel free to leave your feedback. If you're looking for a\n          motivated individual, don't hesitate to contact me!\n        </p>\n      </div>\n    </div>\n    <div\n      *ngIf=\"isSendMessage | async; else congratulation\"\n      class=\"form_container typping\"\n    >\n      <div class=\"wrapper_form d-flex flex-column\">\n        <form class=\"my-2\" (submit)=\"onSubmit()\" [formGroup]=\"formContact\">\n          <div class=\"container_input\">\n            <label for=\"name\" class=\"d-flex align-items-center my-2 label_form\">\n              <div class=\"bar me-2\"></div>\n              Agency name :\n            </label>\n            <input id=\"name\" formControlName=\"name\" type=\"text\" />\n            <p *ngIf=\"hasError('name', 'required')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"required\"] }}\n            </p>\n            <p *ngIf=\"hasError('name', 'maxlength')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"maxlength\"] }}\n            </p>\n          </div>\n          <div class=\"container_input\">\n            <label\n              for=\"email\"\n              class=\"d-flex align-items-center my-2 label_form\"\n            >\n              <div class=\"bar me-2\"></div>\n              Agency email :\n            </label>\n            <input id=\"email\" formControlName=\"email\" type=\"email\" />\n            <p *ngIf=\"hasError('email', 'email')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"email\"] }}\n            </p>\n            <p *ngIf=\"hasError('email', 'required')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"required\"] }}\n            </p>\n          </div>\n          <div class=\"container_textarea\">\n            <label\n              for=\"message\"\n              class=\"d-flex align-items-center my-2 label_form\"\n            >\n              <div class=\"bar me-2\"></div>\n              Message :\n            </label>\n            <textarea formControlName=\"message\" id=\"message\"></textarea>\n            <p *ngIf=\"hasError('message', 'required')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"required\"] }}\n            </p>\n            <p *ngIf=\"hasError('message', 'maxlength')\" class=\"eror_theme\">\n              {{ validationMessageErrors[\"maxlength\"] }}\n            </p>\n          </div>\n          <div class=\"w-100 d-flex justify-content-center mt-2\">\n            <button type=\"submit\" class=\"btn btn-info\">Send message</button>\n          </div>\n        </form>\n        <figure class=\"profil_picture_form d-flex flex-column\">\n          <div class=\"container_img_contact\">\n            <img\n              class=\"enter\"\n              src=\"../../assets/images/githubpng.png\"\n              alt=\"it's me\"\n            />\n          </div>\n\n          <figcaption class=\"d-flex justify-content-center align-items-center\">\n            <div class=\"bar me-2\"></div>\n            <a href=\"\" target=\"_blank\"> My github </a>\n            <div class=\"bar ms-2\"></div>\n          </figcaption>\n        </figure>\n      </div>\n    </div>\n    <ng-template #congratulation>\n      <div class=\"thx\">\n        <picture>\n          <img\n            src=\"../../assets/../assets/images/thx.svg\"\n            alt=\"heart with message inside thx\"\n          />\n        </picture>\n      </div>\n    </ng-template>\n  </div>\n  <canvas #confettiCanvas id=\"canvas_confetti\"></canvas>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent {\n\n}\n","<p>footer works!</p>\n","import { Component } from '@angular/core';\nimport {\n  trigger,\n  transition,\n  style,\n  animate,\n  query,\n  stagger,\n} from '@angular/animations';\nimport { IProject } from '../shared/interface/iproject.interface';\nimport { ProjectService } from '../shared/services/project.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  animations: [\n    trigger('queryAnimation', [\n      transition(':enter', [\n        query('.typping', [\n          style({\n            opacity: 0,\n            transform: 'translateX(-80px)',\n          }),\n          stagger(100, [animate(500)]),\n        ]),\n      ]),\n    ]),\n  ],\n})\nexport class HomeComponent {\n  projects: IProject[] = [];\n  exp = '';\n  t = '';\n  constructor(private projectService: ProjectService) {}\n  ngOnInit() {\n    this.projectService.getAllProjects().subscribe({\n      next: (p: any) => {\n        const { data } = p;\n        this.projects = data.projects;\n      },\n    });\n  }\n}\n","<section class=\"home_hero\" [@queryAnimation]=\"exp\">\n  <div class=\"profil_picture typping\">\n    <img class=\"enter\" src=\"../assets/images/r.png\" alt=\"it's me\" />\n  </div>\n  <div class=\"profil_info d-flex flex-column justify-content-center\">\n    <span class=\"title_bar d-flex align-items-center typping\">\n      <div class=\"bar me-2\"></div>\n      I'm\n    </span>\n    <div>\n      <div>\n        <h1 class=\"title_text typping\">\n          <span class=\"first_letter\">W</span>etterene\n          <span class=\"first_letter\">R</span>émy\n        </h1>\n      </div>\n    </div>\n    <div class=\"tel_profil_picture my-2 typping\">\n      <img src=\"../assets/images/r.png\" alt=\"\" />\n    </div>\n    <span class=\"title_red typping\"> Web Developer </span>\n    <div class=\"description typing-container\">\n      <p class=\"typping\">\n        As a junior full stack web developer, I am passionate about creating\n        websites and applications. I use various technologies to develop smooth\n        and intuitive user experiences. My goal is to bring innovative solutions\n        and contribute to exciting projects. Want to know more? Click on\n        \"Discover me\" and explore my journey and skills.\n      </p>\n    </div>\n    <div>\n      <a class=\"btn_arrow my-4 typping\" [routerLink]=\"['/skills']\">\n        Discover me <span>&rarr;</span>\n      </a>\n    </div>\n  </div>\n</section>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IProject } from '../shared/interface/iproject.interface';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GlobalService } from '../shared/services/global.service';\n\n@Component({\n  selector: 'app-info-pop',\n  templateUrl: './info-pop.component.html',\n  styleUrls: ['./info-pop.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state(\n        'open',\n        style({\n          transform: '  scale(1)',\n        })\n      ),\n      state(\n        'close',\n        style({\n          transform: 'scale(0)',\n        })\n      ),\n      transition('open => close', animate(200)),\n      transition('close => open', animate(200)),\n    ]),\n  ],\n})\nexport class InfoPopComponent {\n  @Input() project?: IProject;\n  @Input() view?: boolean;\n  @Output() onClick: EventEmitter<boolean> = new EventEmitter();\n  @Output() onNavigateEmit: EventEmitter<number> = new EventEmitter();\n  url_image: string = '';\n  state: string = 'open';\n  constructor(private globalService: GlobalService) {}\n  ngOnInit() {\n    this.url_image = this.globalService.API_IMG_URL;\n  }\n  close() {\n    this.view = false;\n    this.onClick.emit(this.view);\n  }\n  onNavigate(id: number) {\n    this.onNavigateEmit.emit(id);\n  }\n}\n","<div class=\"all-content-pop\" [@openClose]=\"view ? 'open' : 'close'\">\n  <div *ngIf=\"project\" class=\"overlay\" (click)=\"close()\">\n    <!-- <img src=\"\" alt=\"net\" /> -->\n  </div>\n\n  <div *ngIf=\"project\" class=\"hero\">\n    <figure\n      class=\"hero-inside\"\n      [ngStyle]=\"{\n        backgroundImage: ' url(' + url_image + project.images[0].path + ') '\n      }\"\n    >\n      <div *ngIf=\"\" class=\"overlay-2\"></div>\n      <button (click)=\"close()\" class=\"closed-pop\">X</button>\n    </figure>\n    <div class=\"container-info\">\n      <div class=\"title\">{{ project.title }}</div>\n      <div class=\"description\">\n        <p>\n          {{ project.description }}\n        </p>\n      </div>\n      <div class=\"action d-flex my-10\">\n        <a\n          *ngIf=\"project.link\"\n          [href]=\"project.link\"\n          target=\"_blank\"\n          class=\"btn btn-info\"\n        >\n          <span>{{ project.title }} discover </span>\n        </a>\n\n        <a\n          *ngIf=\"project.github\"\n          [href]=\"project.github\"\n          target=\"_blank\"\n          class=\"btn btn-info mx-2\"\n        >\n          <span>Githhub </span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"d-flex justify-content-center nav-bar-time flex-column py-1\">\n  <svg\n    *ngFor=\"let route of routes\"\n    [routerLink]=\"route.path\"\n    routerLinkActive=\"router-link-active\"\n    [routerLinkActiveOptions]=\"{ exact: true }\"\n    class=\"bar-line\"\n    data-name=\"Calque 2\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 9.56 66.01\"\n  >\n    <defs>\n      <style>\n        .Layer_1 {\n          height: 50px;\n        }\n        .cls-1 {\n          width: 20px;\n          height: 10px;\n          fill: none;\n          stroke: whitesmoke;\n          stroke-width: 1px;\n        }\n      </style>\n    </defs>\n    <g id=\"Layer_1\" data-name=\"Layer 1\">\n      <g>\n        <line class=\"cls-1\" x1=\"5.06\" x2=\"5.06\" y2=\"57.03\" />\n        <circle class=\"cls-1\" cx=\"4.78\" cy=\"61.23\" r=\"3.28\" />\n      </g>\n    </g>\n  </svg>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { IRoute } from '../shared/interface/iroute.interface';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss'],\n})\nexport class NavBarComponent {\n  @Input() routes: IRoute[] = [];\n}\n","import {\n  animate,\n  query,\n  stagger,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component } from '@angular/core';\nimport { IProject } from '../shared/interface/iproject.interface';\nimport { ProjectService } from '../shared/services/project.service';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { GlobalService } from '../shared/services/global.service';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss'],\n  animations: [\n    trigger('queryAnimation', [\n      transition(':enter', [\n        query('.typping', [\n          style({\n            opacity: 0,\n            transform: 'translateX(80px)',\n          }),\n\n          stagger(100, [animate(500)]),\n        ]),\n      ]),\n    ]),\n  ],\n})\nexport class ProjectComponent {\n  url_image: string = '';\n  isActive: string = '';\n  projects: IProject[] = [];\n  project?: IProject;\n  view: boolean = false;\n  close(view: boolean): void {\n    this.view = view;\n  }\n\n  openPop(view: boolean, project: IProject) {\n    this.view = view;\n    this.project = project;\n  }\n  constructor(\n    private projectService: ProjectService,\n    private globalService: GlobalService\n  ) {}\n  ngOnInit() {\n    this.url_image = this.globalService.API_IMG_URL;\n    this.projectService.getAllProjects().subscribe({\n      next: (response: any) => {\n        const { data } = response;\n        this.projects = data.projects;\n      },\n    });\n  }\n}\n","<section class=\"home_hero ps_rel\" [@queryAnimation]=\"isActive\">\n  <div class=\"profil_info d-flex flex-column justify-content-center container\">\n    <div>\n      <div>\n        <h1 class=\"title_text typping\">\n          <span class=\"first_letter\">P</span>rojects\n        </h1>\n      </div>\n    </div>\n    <div class=\"swiper-container my-5 grid_container_card typping\">\n      <div\n        class=\"wrapper\"\n        *ngFor=\"let project of projects\"\n        (click)=\"openPop(true, project)\"\n      >\n        <div class=\"content-splitter\">\n          <div class=\"left\">\n            <div class=\"block\">\n              <div class=\"header\">{{ project.title }}</div>\n              <div class=\"content\">\n                {{ project.description | slice : 0 : 100 }}...\n              </div>\n            </div>\n            <div class=\"container_icon_project d-flex\">\n              <figure\n                class=\"d-flex flex-column align-items-center\"\n                *ngFor=\"let techno of project.technologies\"\n              >\n                <img\n                  [src]=\"[url_image + techno.icon]\"\n                  alt=\"techno.title\"\n                  class=\"my-2\"\n                />\n                <figcaption>{{ techno.title }}</figcaption>\n              </figure>\n            </div>\n          </div>\n        </div>\n        <div class=\"right\">\n          <span *ngIf=\"!project.link\">UpComming soon</span>\n          <img\n            [src]=\"[url_image + project.images[0].path]\"\n            [alt]=\"project.title\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div>\n      <a class=\"btn_arrow my-4 typping\" [routerLink]=\"['/contact']\">\n        Contact me <span>&rarr;</span>\n      </a>\n    </div>\n  </div>\n</section>\n<div class=\"ps_rel\">\n  <app-info-pop\n    *ngIf=\"project\"\n    [view]=\"view\"\n    (onClick)=\"close($event)\"\n    [project]=\"project\"\n  ></app-info-pop>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { IDataMessage } from '../interface/IDataMessage.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { GlobalService } from './global.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ContactService extends GlobalService {\r\n  isSending$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n  sendMessage(dataMessage: IDataMessage): Observable<any> {\r\n    return this.http.post(`${this.API_URL}message`, dataMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n  public API_URL: string = 'http://localhost:5000/api/';\r\n  public API_IMG_URL: string = 'http://localhost:5000/projects/';\r\n  //public API_URL: string = 'https://rw-folio.frinki-ad.com/api/';\r\n  //public API_IMG_URL: string = 'https://rw-folio.frinki-ad.com/projects/';\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IProject } from '../interface/iproject.interface';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService extends GlobalService {\n  API_URI_PROJECT: string = this.API_URL + 'projects';\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getAllProjects(): Observable<IProject[]> {\n    return this.http.get<IProject[]>(this.API_URI_PROJECT);\n  }\n\n  getById(id: number): Observable<IProject> {\n    return this.http.get<IProject>(`${this.API_URI_PROJECT}/${id}`);\n  }\n  create(project: IProject): Observable<IProject> {\n    return this.http.post<IProject>(`${this.API_URI_PROJECT}}`, project);\n  }\n  update(id: number, updatedProject: IProject): Observable<IProject> {\n    return this.http.post<IProject>(\n      `${this.API_URI_PROJECT}/${id}`,\n      updatedProject\n    );\n  }\n  delete(id: number): Observable<IProject> {\n    return this.http.delete<IProject>(`${this.API_URI_PROJECT}/${id}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ITechnology } from '../interface/itechnology.interface';\nimport { Observable } from 'rxjs';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TechnologiesService extends GlobalService {\n  constructor(private http: HttpClient) {\n    super();\n  }\n  private API_URI_TECHNOLOGY = this.API_URL + 'technologies';\n  getAll(): Observable<ITechnology[]> {\n    return this.http.get<ITechnology[]>(this.API_URI_TECHNOLOGY);\n  }\n\n  getById(id: number): Observable<ITechnology> {\n    return this.http.get<ITechnology>(`${this.API_URI_TECHNOLOGY}/${id}`);\n  }\n  create(project: ITechnology): Observable<ITechnology> {\n    return this.http.post<ITechnology>(`${this.API_URI_TECHNOLOGY}}`, project);\n  }\n  update(id: number, updatedProject: ITechnology): Observable<ITechnology> {\n    return this.http.post<ITechnology>(\n      `${this.API_URI_TECHNOLOGY}/${id}`,\n      updatedProject\n    );\n  }\n  delete(id: number): Observable<ITechnology> {\n    return this.http.delete<ITechnology>(`${this.API_URI_TECHNOLOGY}/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ITechnology } from '../shared/interface/itechnology.interface';\nimport { TechnologiesService } from '../shared/services/technology.service';\nimport {\n  trigger,\n  transition,\n  query,\n  style,\n  stagger,\n  animate,\n} from '@angular/animations';\nimport { GlobalService } from '../shared/services/global.service';\n\n@Component({\n  selector: 'app-skill',\n  templateUrl: './skill.component.html',\n  styleUrls: ['./skill.component.scss'],\n  animations: [\n    trigger('queryAnimation', [\n      transition(':enter', [\n        query('.typping', [\n          style({\n            opacity: 0,\n            transform: 'translateX(80px)',\n          }),\n          stagger(100, [animate(500)]),\n        ]),\n      ]),\n    ]),\n  ],\n})\nexport class SkillComponent {\n  constructor(\n    private technoService: TechnologiesService,\n    private globalService: GlobalService\n  ) {}\n  technologies: ITechnology[] = [];\n  url_image: string = '';\n  ngOnInit() {\n    this.url_image = this.globalService.API_IMG_URL;\n    this.technoService.getAll().subscribe({\n      next: (response: any) => {\n        const { data } = response;\n        this.technologies = data.technologies;\n      },\n    });\n  }\n}\n","<section class=\"home_hero\" [@queryAnimation]=\"\">\n  <div class=\"profil_picture typping\">\n    <img class=\"enter\" src=\"../../assets/images/remyw.png\" alt=\"it's me\" />\n  </div>\n  <div class=\"profil_info d-flex flex-column justify-content-center\">\n    <div>\n      <div>\n        <h1 class=\"title_text typping\">\n          <span class=\"first_letter\">S</span>kills\n        </h1>\n      </div>\n    </div>\n    <div class=\"tel_profil_picture my-2 typping\">\n      <img src=\"../../assets/images/remyw.png\" alt=\"\" />\n    </div>\n    <span class=\"title_red typping\"> My studies </span>\n    <div class=\"description typing-container\">\n      <p class=\"typping\">\n        In 2020, I made the decision to pursue further studies in the field of\n        development due to my enduring passion for technology. I enrolled in a\n        higher education program at EPSE d'Enghien, where I embarked on a\n        two-year journey. Throughout this period, I gained extensive knowledge\n        in PHP and Symfony, alongside an introductory understanding of frontend\n        development using React. However, being aware of the evolving industry\n        trends, I complemented my education by acquiring proficiency in Angular,\n        React, and Node.js. These new skills captivated me and further fueled my\n        enthusiasm for modern technologies.\n      </p>\n    </div>\n\n    <div class=\"container_technologies my-5\">\n      <span class=\"title_bar d-flex align-items-center typping\">\n        <div class=\"bar me-2\"></div>\n        Technologies\n      </span>\n      <div class=\"container_icon d-flex typping\">\n        <div\n          class=\"d-flex flex-column align-items-center figure\"\n          *ngFor=\"let t of technologies\"\n        >\n          <img [src]=\"[url_image + t.icon]\" alt=\"t.title\" class=\"my-2\" />\n          <div class=\"figcaption\">{{ t.title }}</div>\n        </div>\n      </div>\n    </div>\n    <div>\n      <a class=\"btn_arrow my-4 typping\" [routerLink]=\"['/projects']\">\n        Are you ready for looking my projects ? <span>&rarr;</span>\n      </a>\n    </div>\n  </div>\n</section>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","HomeComponent","SkillComponent","ProjectComponent","ContactComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","isActive","getAnimationState","outlet","isActivated","activatedRoute","selectors","decls","vars","consts","template","i0","BrowserModule","HttpClientModule","BrowserAnimationsModule","FooterComponent","NavBarComponent","InfoPopComponent","GlobalService","ReactiveFormsModule","AppModule","bootstrap","declarations","trigger","transition","query","style","stagger","animate","Validators","confetti","BehaviorSubject","Subscription","_fb","contactService","undefined","isSending$","required","email","maxlength","ngOnInit","formContact","group","message","maxLength","name","onSubmit","valid","unsubscribe","add","sendMessage","value","subscribe","next","markAllAsTouched","ngAfterViewInit","myConfetti","create","confettiCanvasRef","nativeElement","resize","useWorker","triggerConfetti","hasError","controlName","validationError","control","get","errors","touched","dirty","ngOnDestroy","clearInterval","timeout","setInterval","observable","count","duration","animationEnd","Date","now","defaults","startVelocity","spread","ticks","zIndex","timeLeft","particleCount","subscription","origin","x","randomInRange","y","Math","random","min","max","viewQuery","opacity","transform","optional","projectService","getAllProjects","p","data","projects","EventEmitter","state","globalService","url_image","API_IMG_URL","close","view","onClick","emit","onNavigate","id","onNavigateEmit","inputs","project","outputs","openPop","response","ContactService","http","dataMessage","post","API_URL","factory","providedIn","ProjectService","API_URI_PROJECT","getById","update","updatedProject","delete","TechnologiesService","getAll","API_URI_TECHNOLOGY","technoService","technologies","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}